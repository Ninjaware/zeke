menuconfig configFATFS
    bool "FatFs"
    default n
    select configFS_INPOOL
    select configVFS_HASH
    ---help---
    The FatFs driver will permit the kernel to read and write MS-DOS based
    file systems. This driver covers the FAT12, FAT16 and FAT32 file system
    versions.

    Some hardware platforms like raspberry may require a FAT boot partition,
    so this driver is useful for accessing that partiotion too.

if configFATFS

config configFATFS_DEFAULT_CODEPAGE
    int "Default code page for FAT"
    default 437
    ---help---
    This option sets the default OEM code page used for FAT file systems.
    Incorrect setting of the code page can cause a file open failure.

    The code page can be also selected dynamically by using the codepage mount
    parameter.

    At least the following code pages are supported:

    *  932  - Japanese Shift_JIS (DBCS, OEM, Windows)
    *  936  - Simplified Chinese GBK (DBCS, OEM, Windows)
    *  949  - Korean (DBCS, OEM, Windows)
    *  950  - Traditional Chinese Big5 (DBCS, OEM, Windows)
    *  1250 - Central Europe (Windows)
    *  1251 - Cyrillic (Windows)
    *  1252 - Latin 1 (Windows)
    *  1253 - Greek (Windows)
    *  1254 - Turkish (Windows)
    *  1255 - Hebrew (Windows)
    *  1256 - Arabic (Windows)
    *  1257 - Baltic (Windows)
    *  1258 - Vietnam (OEM, Windows)
    *  437  - U.S. (OEM)
    *  720  - Arabic (OEM)
    *  737  - Greek (OEM)
    *  775  - Baltic (OEM)
    *  850  - Multilingual Latin 1 (OEM)
    *  858  - Multilingual Latin 1 + Euro (OEM)
    *  852  - Latin 2 (OEM)
    *  855  - Cyrillic (OEM)
    *  866  - Russian (OEM)
    *  857  - Turkish (OEM)
    *  862  - Hebrew (OEM)
    *  874  - Thai (OEM, Windows)

config configFATFS_UNICODE
    bool "FAT Unicode support"
    default n

choice

    prompt "Directory entry offset 0x12"
    ---help---
        Since DOS 7.0 the offsets 0x12 and 0x13 have been used for saving the
        last access time (known as atime in Unix-like systems). However, atime
        is not a very popular file system feature these days and even DOS had it
        disabled by default (ACCDATE in CONFIG.SYS enabled it).

        FlexOS, 4680 OS, 4690 OS, DR-DOS and some other multi-user operating
        systems used these bytes for storing owner IDs.

        Zeke offers a choice between atime or storing UID and GID in these
        bytes.

config configFATFS_ACCDATE
    bool "ACCDATE"
    default y

config configFATFS_OWNER_ID
    bool "Owner ID"

endchoice

config configFATFS_DESIREDVNODES
    int "desiredvnodes"
    default 100
    ---help---
    Controls the vnode hash table size.
    This option should be set to the expected average maximum number of vnodes
    required by the whole fatfs driver.

config configFATFS_DEBUG
    bool "Debugging"
    default n

endif
